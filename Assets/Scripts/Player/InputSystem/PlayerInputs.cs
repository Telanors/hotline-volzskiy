//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.1
//     from Assets/Scripts/Player/InputSystem/PlayerInputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputs : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputs"",
    ""maps"": [
        {
            ""name"": ""CharacterInput"",
            ""id"": ""fa0d0c01-dc6f-4f66-8ebb-f03c8fe2a00d"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""67c7c4f8-695c-4c6d-8d96-d143c34bbca3"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RunToggle"",
                    ""type"": ""Button"",
                    ""id"": ""248e035d-fac2-4f15-9faa-4b1eac8b02c6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""6c3f81f2-3c7c-440b-876d-665db6e8dc2a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseDelta"",
                    ""type"": ""Value"",
                    ""id"": ""3ad8a05d-ec7a-4480-b3f8-d30d280ca85a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Fire"",
                    ""type"": ""Button"",
                    ""id"": ""622b4f16-a6f5-4cc6-9e10-0d3881e58e0c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Drop"",
                    ""type"": ""Button"",
                    ""id"": ""995022e7-e6da-40e0-bcdb-5d59d3bdf3d6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PickUp"",
                    ""type"": ""Button"",
                    ""id"": ""3f767efb-225c-4986-bc2c-fb7954afdb8f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ESC"",
                    ""type"": ""Button"",
                    ""id"": ""f5d82bd1-da31-41a1-8f99-322404cd82e9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crouch"",
                    ""type"": ""Button"",
                    ""id"": ""d275c9f6-5bba-4bec-b8cb-1369c221a4e3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MeleeAttack"",
                    ""type"": ""Button"",
                    ""id"": ""ab78d047-0797-4c71-8f05-bd546d669552"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""eba474d3-0f09-4dd9-9929-9b377c1e1394"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c6969f0f-c9fe-456e-9e8d-f1f447f6d729"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""bce745f6-351c-45a4-858d-7bd34be0eb7a"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""b4c9a881-8974-4b9b-8210-83034b88da7f"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""d534c927-7314-4f64-a6d2-8b318ecb5b7a"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""4f560043-a5e9-428b-974e-9f5271bf0be1"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RunToggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""52c89ff5-0a1e-48a1-9ddc-262cf6a63842"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3a4d14aa-ffc8-4625-a58f-660c2856b210"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""355bcce5-ffe3-49a0-9aad-9b2d06c0ce14"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2e9df681-c0cf-44f5-8f82-b162a9c44b1f"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Drop"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3202636b-a307-489a-b899-647b199d8e00"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PickUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""88f41cba-a721-4be0-ac8a-45af64cf25d9"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ESC"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3a75df38-d80b-471b-9284-199e41af96a0"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ESC"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5600fe1c-2212-48e0-a656-bd0663c37cd5"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""66a7365a-62e5-4651-aaef-677cd0f005f1"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MeleeAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // CharacterInput
        m_CharacterInput = asset.FindActionMap("CharacterInput", throwIfNotFound: true);
        m_CharacterInput_Movement = m_CharacterInput.FindAction("Movement", throwIfNotFound: true);
        m_CharacterInput_RunToggle = m_CharacterInput.FindAction("RunToggle", throwIfNotFound: true);
        m_CharacterInput_Jump = m_CharacterInput.FindAction("Jump", throwIfNotFound: true);
        m_CharacterInput_MouseDelta = m_CharacterInput.FindAction("MouseDelta", throwIfNotFound: true);
        m_CharacterInput_Fire = m_CharacterInput.FindAction("Fire", throwIfNotFound: true);
        m_CharacterInput_Drop = m_CharacterInput.FindAction("Drop", throwIfNotFound: true);
        m_CharacterInput_PickUp = m_CharacterInput.FindAction("PickUp", throwIfNotFound: true);
        m_CharacterInput_ESC = m_CharacterInput.FindAction("ESC", throwIfNotFound: true);
        m_CharacterInput_Crouch = m_CharacterInput.FindAction("Crouch", throwIfNotFound: true);
        m_CharacterInput_MeleeAttack = m_CharacterInput.FindAction("MeleeAttack", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // CharacterInput
    private readonly InputActionMap m_CharacterInput;
    private ICharacterInputActions m_CharacterInputActionsCallbackInterface;
    private readonly InputAction m_CharacterInput_Movement;
    private readonly InputAction m_CharacterInput_RunToggle;
    private readonly InputAction m_CharacterInput_Jump;
    private readonly InputAction m_CharacterInput_MouseDelta;
    private readonly InputAction m_CharacterInput_Fire;
    private readonly InputAction m_CharacterInput_Drop;
    private readonly InputAction m_CharacterInput_PickUp;
    private readonly InputAction m_CharacterInput_ESC;
    private readonly InputAction m_CharacterInput_Crouch;
    private readonly InputAction m_CharacterInput_MeleeAttack;
    public struct CharacterInputActions
    {
        private @PlayerInputs m_Wrapper;
        public CharacterInputActions(@PlayerInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_CharacterInput_Movement;
        public InputAction @RunToggle => m_Wrapper.m_CharacterInput_RunToggle;
        public InputAction @Jump => m_Wrapper.m_CharacterInput_Jump;
        public InputAction @MouseDelta => m_Wrapper.m_CharacterInput_MouseDelta;
        public InputAction @Fire => m_Wrapper.m_CharacterInput_Fire;
        public InputAction @Drop => m_Wrapper.m_CharacterInput_Drop;
        public InputAction @PickUp => m_Wrapper.m_CharacterInput_PickUp;
        public InputAction @ESC => m_Wrapper.m_CharacterInput_ESC;
        public InputAction @Crouch => m_Wrapper.m_CharacterInput_Crouch;
        public InputAction @MeleeAttack => m_Wrapper.m_CharacterInput_MeleeAttack;
        public InputActionMap Get() { return m_Wrapper.m_CharacterInput; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CharacterInputActions set) { return set.Get(); }
        public void SetCallbacks(ICharacterInputActions instance)
        {
            if (m_Wrapper.m_CharacterInputActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_CharacterInputActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_CharacterInputActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_CharacterInputActionsCallbackInterface.OnMovement;
                @RunToggle.started -= m_Wrapper.m_CharacterInputActionsCallbackInterface.OnRunToggle;
                @RunToggle.performed -= m_Wrapper.m_CharacterInputActionsCallbackInterface.OnRunToggle;
                @RunToggle.canceled -= m_Wrapper.m_CharacterInputActionsCallbackInterface.OnRunToggle;
                @Jump.started -= m_Wrapper.m_CharacterInputActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_CharacterInputActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_CharacterInputActionsCallbackInterface.OnJump;
                @MouseDelta.started -= m_Wrapper.m_CharacterInputActionsCallbackInterface.OnMouseDelta;
                @MouseDelta.performed -= m_Wrapper.m_CharacterInputActionsCallbackInterface.OnMouseDelta;
                @MouseDelta.canceled -= m_Wrapper.m_CharacterInputActionsCallbackInterface.OnMouseDelta;
                @Fire.started -= m_Wrapper.m_CharacterInputActionsCallbackInterface.OnFire;
                @Fire.performed -= m_Wrapper.m_CharacterInputActionsCallbackInterface.OnFire;
                @Fire.canceled -= m_Wrapper.m_CharacterInputActionsCallbackInterface.OnFire;
                @Drop.started -= m_Wrapper.m_CharacterInputActionsCallbackInterface.OnDrop;
                @Drop.performed -= m_Wrapper.m_CharacterInputActionsCallbackInterface.OnDrop;
                @Drop.canceled -= m_Wrapper.m_CharacterInputActionsCallbackInterface.OnDrop;
                @PickUp.started -= m_Wrapper.m_CharacterInputActionsCallbackInterface.OnPickUp;
                @PickUp.performed -= m_Wrapper.m_CharacterInputActionsCallbackInterface.OnPickUp;
                @PickUp.canceled -= m_Wrapper.m_CharacterInputActionsCallbackInterface.OnPickUp;
                @ESC.started -= m_Wrapper.m_CharacterInputActionsCallbackInterface.OnESC;
                @ESC.performed -= m_Wrapper.m_CharacterInputActionsCallbackInterface.OnESC;
                @ESC.canceled -= m_Wrapper.m_CharacterInputActionsCallbackInterface.OnESC;
                @Crouch.started -= m_Wrapper.m_CharacterInputActionsCallbackInterface.OnCrouch;
                @Crouch.performed -= m_Wrapper.m_CharacterInputActionsCallbackInterface.OnCrouch;
                @Crouch.canceled -= m_Wrapper.m_CharacterInputActionsCallbackInterface.OnCrouch;
                @MeleeAttack.started -= m_Wrapper.m_CharacterInputActionsCallbackInterface.OnMeleeAttack;
                @MeleeAttack.performed -= m_Wrapper.m_CharacterInputActionsCallbackInterface.OnMeleeAttack;
                @MeleeAttack.canceled -= m_Wrapper.m_CharacterInputActionsCallbackInterface.OnMeleeAttack;
            }
            m_Wrapper.m_CharacterInputActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @RunToggle.started += instance.OnRunToggle;
                @RunToggle.performed += instance.OnRunToggle;
                @RunToggle.canceled += instance.OnRunToggle;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @MouseDelta.started += instance.OnMouseDelta;
                @MouseDelta.performed += instance.OnMouseDelta;
                @MouseDelta.canceled += instance.OnMouseDelta;
                @Fire.started += instance.OnFire;
                @Fire.performed += instance.OnFire;
                @Fire.canceled += instance.OnFire;
                @Drop.started += instance.OnDrop;
                @Drop.performed += instance.OnDrop;
                @Drop.canceled += instance.OnDrop;
                @PickUp.started += instance.OnPickUp;
                @PickUp.performed += instance.OnPickUp;
                @PickUp.canceled += instance.OnPickUp;
                @ESC.started += instance.OnESC;
                @ESC.performed += instance.OnESC;
                @ESC.canceled += instance.OnESC;
                @Crouch.started += instance.OnCrouch;
                @Crouch.performed += instance.OnCrouch;
                @Crouch.canceled += instance.OnCrouch;
                @MeleeAttack.started += instance.OnMeleeAttack;
                @MeleeAttack.performed += instance.OnMeleeAttack;
                @MeleeAttack.canceled += instance.OnMeleeAttack;
            }
        }
    }
    public CharacterInputActions @CharacterInput => new CharacterInputActions(this);
    public interface ICharacterInputActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnRunToggle(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnMouseDelta(InputAction.CallbackContext context);
        void OnFire(InputAction.CallbackContext context);
        void OnDrop(InputAction.CallbackContext context);
        void OnPickUp(InputAction.CallbackContext context);
        void OnESC(InputAction.CallbackContext context);
        void OnCrouch(InputAction.CallbackContext context);
        void OnMeleeAttack(InputAction.CallbackContext context);
    }
}
